@import "mixins/mixins";
@import "common/var";

$colors: ('default', 'primary', 'secondary', 'gray', 'light', 'success', 'danger', 'info', 'warning');

@include b(link) {
  display: inline-flex;
  flex-direction: row;
  // align-items: center;
  // justify-content: center;
  // vertical-align: middle;
  position: relative;
  text-decoration: none;
  outline: none;
  cursor: pointer;
  padding: 0;
  font-size: $--link-font-size;
  font-weight: $--link-font-weight;

  @extend .b-sm;

  @include when(underline) {
    &:hover:after {
      content: "";
      position: absolute;
      left: 0;
      right: 0;
      height: 0;
      bottom: 0;
      border-bottom: 1px solid $--link-default-active-color
    }
  }

  @include when(disabled) {
    cursor: not-allowed;
  }

  & [class*="el-icon-"] {
    & + span {
      margin-left: 5px;
    }
  }

  & i[class^='isax'] {
    font-weight: 600;
  }


  &.el-link--default  {
    color: $--color-primary;
    &:hover {
      color: $--link-default-active-color
    }
    &:after {
      border-color: $--link-default-active-color
    }
    @include when(disabled) {
      color: $--link-disabled-font-color
    }
  }

    // Her düğme tipi ve durumu için özel renk değerlerin tanımı
    $button-variant-values: (
      'default': (
        'default': 700,
        'hover': 500,
        'active': 900 // 'disabled' tanımlanmadı, mixin'in varsayılanı kullanılacak,,,,
      ),
      'primary': (
        'default': 700,
        'hover': 500,
        'active': 900 // 'disabled' tanımlanmadı, mixin'in varsayılanı kullanılacak,,,,
      ),
      'light': (
        'default': 700,
        'hover': 500,
        'active': 900,
      ),
    );

  @each $color in $colors {
    $default: map-get-deep($button-variant-values, $color, 'default') or 500;
    $hover: map-get-deep($button-variant-values, $color, 'hover') or 400;
    $active: map-get-deep($button-variant-values, $color, 'active') or 600;
    $disabled: map-get-deep($button-variant-values, $color, 'disabled') or 200;

    &.el-link--#{"#{$color}"}, &.#{$color}{
      color: var(--#{"#{$color}"}-#{"#{$default}"});
      &:hover {
        color: var(--#{"#{$color}"}-#{"#{$hover}"});
      }
      &:after {
        border-color: var(--#{"#{$color}"}-#{"#{$active}"});
      }
      @include when(disabled) {
        color: var(--#{"#{$color}"}-#{"#{$disabled}"});
      }
      @include when(underline) {
        &:hover:after {
          border-color: var(--#{"#{$color}"}-#{"#{$default}"});
        }
      }
    }
  }

  &.xsmall {
    @extend .p-xs;
  }


  &.small {
    @extend .p-sm;
  }


  &.medium {
    @extend .p-md;
  }

  &.medium-custom {
    @extend .p-md-c;
  }

  &.large {
    @extend .p-lg;
  }

}

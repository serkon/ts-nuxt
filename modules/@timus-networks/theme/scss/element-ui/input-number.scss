@use "sass:math";
@import "mixins/mixins";
@import "common/var";

@include b(input-number) {
  position: relative;
  display: inline-block;
  line-height: math.div($--input-height - 2, 1);

  .el-input {
    display: block;
    width: $custom-input-number-width;

    &__inner {
      -webkit-appearance: none;
      padding-left: $custom-input-number-buttons-width + $custom-input-padding;
      padding-right: $custom-input-number-buttons-width + $custom-input-padding;
      text-align: center;
    }
  }

  &.danger {
    .el-input {
      &__inner {
        border-color: var(--danger-500);
      }
    }
  }

  @include e((increase, decrease)) {
    position: absolute;
    z-index: 1;
    top: 1px;
    bottom: 1px;
    width: $custom-input-number-buttons-width;
    text-align: center;
    background: $custom-input-number-buttons-background-color;
    color: $--color-text-regular;
    cursor: pointer;
    font-size: 13px;
    display: flex;
    align-items: center;
    justify-content: center;


    [class*=el-icon] {
      display: flex;
      justify-content: center;
      align-items: center;
    }

    &:hover {
      color: $--color-primary;

      &:not(.is-disabled) ~ .el-input .el-input__inner:not(.is-disabled) {
        border-color: $--input-focus-border;
      }
    }

    &.is-disabled {
      color: $--input-disabled-border;
      cursor: not-allowed;
    }

    ::before {
      font-size: 9px;
    }
  }

  @include e(increase) {
    right: 1px;
    border-radius: 0 $--border-radius-base $--border-radius-base 0;
    border-left: $--border-base;
  }

  @include e(decrease) {
    left: 1px;
    border-radius: $--border-radius-base 0 0 $--border-radius-base;
    border-right: $--border-base;
  }

  @include when(disabled) {
    @include e((increase, decrease)) {
      border-color: $--input-disabled-border;
      color: $--input-disabled-border;

      &:hover {
        color: $--input-disabled-border;
        cursor: not-allowed;
      }
    }
  }

  @include m(large) {
    line-height: math.div($--input-large-height - 2, 1);

    @include e((increase, decrease)) {
      font-size: $--input-large-font-size;
    }

    .el-input__inner {
      padding-left: $custom-input-number-buttons-width + 12;
      padding-right: $custom-input-number-buttons-width + 12;
    }
  }

  @include m(medium) {
    line-height: math.div($--input-medium-height - 2, 1);

    @include e((increase, decrease)) {
      font-size: $--input-medium-font-size;
    }

    .el-input__inner {
      padding-left: $custom-input-number-buttons-width + 12;
      padding-right: $custom-input-number-buttons-width + 12;
    }
  }

  @include m(small) {
    line-height: math.div($--input-small-height - 2, 1);

    @include e((increase, decrease)) {
      font-size: $--input-small-font-size;

      [class*=el-icon] {
        transform: scale(.9);
      }
    }

    .el-input__inner {
      padding-left: $custom-input-number-buttons-width + 12;
      padding-right: $custom-input-number-buttons-width + 12;
    }
  }

  @include m(mini) {
    line-height: math.div($--input-mini-height - 2, 1);

    @include e((increase, decrease)) {
      font-size: $--input-mini-font-size;

      [class*=el-icon] {
        transform: scale(.8);
      }
    }

    .el-input__inner {
      padding-left: $custom-input-number-buttons-width + 12;
      padding-right: $custom-input-number-buttons-width + 12;
    }
  }

  @include when(without-controls) {
    .el-input__inner {
      padding-left: 15px;
      padding-right: 15px;
    }
  }

  @include when(controls-right) {

    &.is-disabled {
      @include e((increase, decrease)) {
        border-color: $--input-disabled-border;
      }
    }

    .el-input__inner {
      padding-left: $custom-input-padding;
      padding-right: $custom-input-number-buttons-width + $custom-input-padding;
      text-align: left;
    }

    @include e((increase, decrease)) {
      height: math.div($--input-large-height - 2, 2);

      [class*=el-icon] {
        transform: scale(.8);
      }
    }

    @include e(increase) {
      border-radius: 0 $--border-radius-base 0 0;
      border-bottom: $--border-base;
    }

    @include e(decrease) {
      right: 1px;
      bottom: 1px;
      top: auto;
      left: auto;
      border-right: none;
      border-left: $--border-base;
      border-radius: 0 0 $--border-radius-base 0;
    }

    &[class*=large] {
      [class*=increase], [class*=decrease] {
        height: math.div($--input-large-height - 2, 2);
      }
    }

    &[class*=medium] {
      [class*=increase], [class*=decrease] {
        height: math.div($--input-medium-height - 2, 2);
      }
    }

    &[class*=small] {
      [class*=increase], [class*=decrease] {
        height: math.div($--input-small-height - 2, 2);
      }
    }

    &[class*=mini] {
      [class*=increase], [class*=decrease] {
        height: math.div($--input-mini-height - 2, 2);
      }
    }
  }
}

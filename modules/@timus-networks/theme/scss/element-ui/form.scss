@import "mixins/mixins";
@import "mixins/utils";
@import "common/var";

@include b(form) {
  @include m(label-left) {
    & .el-form-item__label {
      text-align: left;
    }
  }
  @include m(label-top) {
    .el-form-item {
      flex-direction: column;
      align-items: normal;
    }

    .el-form-item__label {
      // float: none;
      // display: inline-block;
      // padding: 0 0 10px 0;
      text-align: left;
      line-height: $custom-form-label-top-line-height;
      padding: 0 0 $custom-form-label-padding-bottom 0;
      display: flex;
      align-items: center;
      flex-grow: 1;
    }
  }
  @include m(inline) {
    & .el-form-item {
      display: flex;
      margin-right: 10px;
      vertical-align: top;
    }
    & .el-form-item__label {
      float: none;
      display: inline-block;
    }
    & .el-form-item__content {
      display: inline-block;
      vertical-align: top;
    }
    &.el-form--label-top .el-form-item__content {
      display: block;
    }
  }
}
@include b(form-item) {
  // margin-bottom: 22px;
  display: flex;
  align-items: center;
  @include utils-clearfix;

  & .el-form-item {
    margin-bottom: 0;
  }

  & .el-input__validateIcon {
    display: none;
  }

  @include m(large) {
    .el-form-item__label {
      line-height: $custom-form-label-large-line-height;
    }
    .el-form-item__content {
      line-height: $custom-form-label-large-line-height;
    }
  }
  @include m(medium) {
    .el-form-item__label {
      line-height: $custom-form-label-medium-line-height;
    }
    .el-form-item__content {
      line-height: $custom-form-label-medium-line-height;
    }
  }
  @include m(small) {
    .el-form-item__label {
      line-height: $custom-form-label-small-line-height;
    }
    .el-form-item__content {
      line-height: $custom-form-label-small-line-height;
    }
    &.el-form-item {
      // margin-bottom: 18px;
    }
    .el-form-item__error {
      padding-top: 2px;
    }
  }
  @include m(mini) {
    .el-form-item__label {
      line-height: $custom-form-label-mini-line-height;
    }
    .el-form-item__content {
      line-height: $custom-form-label-mini-line-height;
    }
    &.el-form-item {
      // margin-bottom: 18px;
    }
    .el-form-item__error {
      padding-top: 1px;
    }
  }

  @include e(label-wrap) {
    float: left;
    .el-form-item__label {
      display: inline-block;
      float: none;
    }
  }

  @include e(label) {
    text-align: right;
    vertical-align: middle;
    float: left;
    font-size: $--form-label-font-size;
    font-weight: $custom-form-label-font-weight;
    color: $custom-form-label-font-color;
    line-height: $custom-form-label-large-line-height;
    padding: 0 12px 0 0;
    box-sizing: border-box;

    + .el-form-item__content{
      margin-left: 0 !important;
      flex-grow: 1;
    }
  }
  @include e(content) {
    line-height: $custom-form-label-large-line-height;
    position: relative;
    font-size: 14px;
    @include utils-clearfix;

    .el-input-group {
      vertical-align: top;
    }
  }
  @include e(error) {
    color: $custom-form-error-font-color;
    font-size: $custom-form-error-font-size;
    line-height: $custom-form-error-font-line-height;
    padding-top: $custom-form-error-padding-top;
    padding-left: $custom-input-padding;

    @include m(inline) {
      position: relative;
      top: auto;
      left: auto;
      display: inline-block;
      margin-left: 10px;
    }
  }

  @include when(required) {
    @include pseudo('not(.is-no-asterisk)') {
      & > .el-form-item__label:before,
      & .el-form-item__label-wrap > .el-form-item__label:before {
        content: '*';
        color: $--color-danger;
        margin-right: 4px;
      }
    }
  }

  @include when(error) {
    & .el-input__inner,
    & .el-textarea__inner {
      &, &:focus {
        border-color: $--color-danger;
      }
    }
    & .el-input-group__append,
    & .el-input-group__prepend {
      & .el-input__inner {
        border-color: transparent;
      }
    }
    .el-input__validateIcon {
      color: $--color-danger;
    }
  }

  @include m(feedback) {
    .el-input__validateIcon {
      display: inline-block;
    }
  }
}

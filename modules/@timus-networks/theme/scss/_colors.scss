@use "sass:map";

$default-color: 500;
$prefix: '';
$theme-colors: (
  'cta': purple,
  'success': green,
  'warning': yellow,
  'danger': red,
);

$theme: (
  light:(
    '100': rgba(255, 255, 255, 100%),
    '200': rgba(255, 255, 255, 100%),
    '300': rgba(255, 255, 255, 100%),
    '400': rgba(255, 255, 255, 100%),
    '500': rgba(255, 255, 255, 100%),
    '600': rgba(255, 255, 255, 100%),
    '700': rgba(255, 255, 255, 100%),
    '800': rgba(255, 255, 255, 100%),
    '900': rgba(255, 255, 255, 100%),
  ),
  primary: (
    '100': #DEE2FF,
    '200': #C3C8FF,
    '300': #9FA4FF,
    '400': #7E79FF,
    '500': #6959FB,
    '600': #5C3BF0,
    '700': #5737D6,
    '800': #4028AB,
    '900': #382887,
  ),
  secondary: (
    '100': #D5F6E8,
    '200': #AEECD4,
    '300': #7EDDBF,
    '400': #43C49F,
    '500': #20A987,
    '600': #12896E,
    '700': #0F6D5A,
    '800': #0E5748,
    '900': #0D473D,
  ),
  gray: (
    '100': #F8F7F8,
    '200': #F3F2F4,
    '300': #DAD9DD,
    '400': #C1C0C7,
    '500': #A8A6B1,
    '600': #8F8D9A,
    '700': #83818F,
    '800': #454157,
    '900': #07021F,
  ),
  info: (
    '100': #E3F1FB,
    '200': #C0E5F7,
    '300': #88D1F1,
    '400': #3CB5E6,
    '500': #21A1D6,
    '600': #1382B6,
    '700': #116793,
    '800': #12587A,
    '900': #144A66,
  ),
  danger: (
    '100': #FDE3E3,
    '200': #FDCBCB,
    '300': #FAA7A7,
    '400': #F35C5C,
    '500': #EB4848,
    '600': #D82A2A,
    '700': #B52020,
    '800': #961E1E,
    '900': #7D1F1F,
  ),
  success: (
    '100': #F0F8ED,
    '200': #D9EDD3,
    '300': #B4DAA7,
    '400': #8EC87B,
    '500': #69B64F,
    '600': #488633,
    '700': #3A6A2B,
    '800': #315526,
    '900': #294621,
  ),
  warning: (
    '100': #FFF5C6,
    '200': #FFE988,
    '300': #FFD643,
    '400': #FFC520,
    '500': #F9A307,
    '600': #DD7B02,
    '700': #B75606,
    '800': #94410C,
    '900': #7A370D,
  ),
);

@function to-rgb($value) {
  @return red($value), green($value), blue($value);
}

@each $color, $item in $theme {
  // add to theme colors
  $color-list: (
      $color: map.get($item, #{$default-color}),
    );
  $theme-colors: map.merge($theme-colors, $color-list);
}

// set variable
:root {
  --bs-white-rgb: 255, 255, 255;
  --bs-black-rgb: 0, 0, 0;
  --bs-bg-opacity: 1;
  @each $color, $item in $theme {
    @each $key, $value in $item {
       --#{$prefix}#{"#{$color}"}-#{$key}: #{$value};
      // --#{$prefix}#{"#{$color}"}-#{$key}-rgb: #{to-rgb($value)};

      .#{$prefix}#{"#{$color}"}-#{$key} {
        // color: #{$value};
      }

      .#{$prefix}bg-#{"#{$color}"}-#{$key} {
        // background-color: #{$value};
      }

      // .#{$name}-#{$key} {
      //   background-color: #{$value};
      // }
    }
  }
}

// Color Shade and Tint Generator
// :root {
//   @mixin variations($name, $color) {
//     $percentages: (80%, 60%, 40%, 20%, 0, -20%, -40%, -60%, -80%);
//     @each $percentage in $percentages {
//       $i: list.index($percentages, $percentage);
//       $variation: $color;
//       @if $percentage > 0 {
//         $variation: color.mix(white, $color, $percentage);
//       }
//       @else if $percentage < 0 {
//         $variation: color.mix(black, $color, $percentage * -1);
//       }
//       --bs-#{$name}-#{$i * 100}: #{$variation};
//     }
//   }
//   @each $name, $value in $colors {
//     @include variations($name, $value);
//   }
// }
